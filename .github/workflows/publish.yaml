name: publish docker image

on:
  push:
    branches: [main]
    tags: ['v*']

env:
  IMAGE_ID: ghcr.io/coders51/image-name

jobs:
  publish-image:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3

    - name: Login to GitHub container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the Docker image
      id: build-image
      run: |
        tag_ref='refs/tags/v'
        VERSION=$(git rev-parse HEAD)
        echo IMAGE_ID=$IMAGE_ID
        echo GITHUB_REF=${{ github.ref }}
        echo VERSION=$VERSION
        
        echo docker build -t $IMAGE_ID:$VERSION -t $IMAGE_ID:latest .
        if [[ ${{ github.ref }} == *${tag_ref}* ]]; then
          TAG_VERSION=$(echo ${{ github.ref }} | cut -d'/' -f3)
          echo docker tag $IMAGE_ID:$VERSION $IMAGE_ID:$TAG_VERSION
        fi

        echo docker push --all-tags $IMAGE_ID
        echo "image=$IMAGE_ID:$VERSION" >> $GITHUB_OUTPUT
    outputs:
        image: ${{ steps.build-image.outputs.image }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: publish-image
    environment: staging
    steps:
    - uses: actions/checkout@v3

    - name: Login to PROD
      run: |
        echo "output from build step '${{ needs.publish-image.outputs.image }}'"
        echo "from env ${{ vars.ENV_VARIABLE }}"
        echo "from env ${{ secrets.ENV_SECRET_VARIABLE }}"
        echo "event_name -> ${{ github.event_name }}"
        echo "event.action -> ${{ github.event.action }}"
        echo "toJson -> ${{ toJson(github) }}"

  deploy-prod:
    runs-on: ubuntu-latest
    needs: publish-image
    environment: production
    if: github.event_name == 'tags'
    steps:
    - uses: actions/checkout@v3

    - name: Login to PROD
      run: |
        echo "output from build step '${{ needs.publish-image.outputs.image }}'"
        echo "from env ${{ vars.ENV_VARIABLE }}"
        echo "from env ${{ secrets.ENV_SECRET_VARIABLE }}"
